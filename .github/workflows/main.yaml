---
    name: Build and Push python Image to AWS ECR
    on:
      push:
        branches: [ main ]
    jobs:
      build-and-push: 
        name: Build Test and Push to ECR
        runs-on: ubuntu-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v2    # Checkout the code from the repository

    
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Define AWS region from GitHub secret
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Define ECR repository from GitHub secret
            aws-region: ${{ vars.AWS_REGION }} # Use the AWS region from the repository variable
    
        - name: Login to Amazon  ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
              # Log in to Amazon ECR to enable Docker push

        
        - name: Automatic Tagging of Releases
          id: increment-git-tag
          run: |  # Increment the Git tag for the release (major, minor, patch) current the defualt is MINOR 
            git fetch --tags
            bash ./build/git_update.sh -v ${{ vars.VERSION_INCREMENT }} 
            
        - name: Build, Tag, and Push the Image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }} # Use the ECR repository from the repository variable
            IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
          run: |
            # Build the Docker image
            echo "Building the Docker image..."
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            # Push the Docker image to ECR
            echo "Pushing the Docker image to ECR..."
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        - name: Print Docker Image URL
          run: |
            # Print the Docker image URL
            IMAGE_URL=${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ steps.increment-git-tag.outputs.git-tag }}
            echo "Docker Image URL: $IMAGE_URL"
            echo "IMAGE_URL=$IMAGE_URL" >> $GITHUB_ENV
          # This step prints the Docker image URL after the image has been pushed to ECR
       
        - name: Trigger CD Pipeline
          uses: peter-evans/repository-dispatch@v3
          with:
            token: ${{ secrets.PAT_GITHUB_TOKEN }}
            repository: orasraf1241/devops-infra
            event-type: deploy
            client-payload: '{"image_url": "${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ steps.increment-git-tag.outputs.git-tag }}", "ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
    